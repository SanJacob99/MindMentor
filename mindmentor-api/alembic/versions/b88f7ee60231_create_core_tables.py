"""create core tables

Revision ID: b88f7ee60231
Revises: 
Create Date: 2025-08-13 11:58:23.464339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b88f7ee60231'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('tag_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('tag_id', name=op.f('pk_tags')),
    sa.UniqueConstraint('name', name=op.f('uq_tags_name')),
    schema='app'
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('display_name', sa.String(length=120), nullable=True),
    sa.Column('hashed_password', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_users')),
    schema='app'
    )
    op.create_table('journals',
    sa.Column('journal_id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('mood', sa.SmallInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('mood IS NULL OR mood BETWEEN 1 AND 10', name=op.f('ck_journals_ck_journals_mood')),
    sa.ForeignKeyConstraint(['user_id'], ['app.users.user_id'], name=op.f('fk_journals_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('journal_id', name=op.f('pk_journals')),
    schema='app'
    )
    op.create_table('reminders',
    sa.Column('reminder_id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('kind', sa.String(length=50), nullable=False),
    sa.Column('schedule_cron', sa.String(length=120), nullable=False),
    sa.Column('timezone', sa.String(length=64), server_default=sa.text("'America/New_York'"), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("kind IN ('daily_checkin','exercise','custom')", name=op.f('ck_reminders_ck_reminders_kind')),
    sa.ForeignKeyConstraint(['user_id'], ['app.users.user_id'], name=op.f('fk_reminders_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('reminder_id', name=op.f('pk_reminders')),
    schema='app'
    )
    op.create_table('sessions',
    sa.Column('session_id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('session_type', sa.String(length=20), nullable=False),
    sa.Column('started_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("session_type IN ('chat','checkin','exercise')", name=op.f('ck_sessions_ck_sessions_type')),
    sa.CheckConstraint('ended_at IS NULL OR ended_at >= started_at', name=op.f('ck_sessions_ck_sessions_time')),
    sa.ForeignKeyConstraint(['user_id'], ['app.users.user_id'], name=op.f('fk_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('session_id', name=op.f('pk_sessions')),
    schema='app'
    )
    op.create_table('journal_tags',
    sa.Column('journal_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('tag_id', sa.BIGINT(), nullable=False),
    sa.ForeignKeyConstraint(['journal_id'], ['app.journals.journal_id'], name=op.f('fk_journal_tags_journal_id_journals'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['app.tags.tag_id'], name=op.f('fk_journal_tags_tag_id_tags'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('journal_id', 'tag_id', name=op.f('pk_journal_tags')),
    schema='app'
    )
    op.create_table('messages',
    sa.Column('message_id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('session_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('role', sa.String(length=16), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("role IN ('user','mentor','system')", name=op.f('ck_messages_ck_messages_role')),
    sa.ForeignKeyConstraint(['session_id'], ['app.sessions.session_id'], name=op.f('fk_messages_session_id_sessions'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('message_id', name=op.f('pk_messages')),
    schema='app'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('messages', schema='app')
    op.drop_table('journal_tags', schema='app')
    op.drop_table('sessions', schema='app')
    op.drop_table('reminders', schema='app')
    op.drop_table('journals', schema='app')
    op.drop_table('users', schema='app')
    op.drop_table('tags', schema='app')
    # ### end Alembic commands ###
